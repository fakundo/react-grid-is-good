{"version":3,"sources":["Grid.js"],"names":["Grid","id","grid","props","name","breakpoint","spanProps","gridSize","spanSize","gutter","getGridPropValue","valign","marginLeft","marginRight","top","middle","bottom","MsFlexAlign","content","createElement","dangerouslySetInnerHTML","__html","join","nextChildren","widthCounter","forEach","children","child","index","spanBreak","getSpanBreak","spanWidth","getSpanWidth","parseInt","push","key","className","getStyles","renderStyleTag","renderChildren","propTypes","any","string","size","number","align","oneOf","defaultProps","childContextTypes","object"],"mappings":"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","file":"Grid.js","sourcesContent":["import React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport uniqueId from 'lodash/uniqueId';\nimport { getPropValue, applyPrefixes, calcSize } from './utils';\nimport Break from './Break';\n\nexport default class Grid extends Component {\n\n  static propTypes = {\n    className: PropTypes.any,\n    children: PropTypes.any,\n    breakpoint: PropTypes.string,\n    size: PropTypes.any,\n    gutter: PropTypes.number,\n    align: PropTypes.oneOf(['left', 'center', 'right']),\n    valign: PropTypes.oneOf(['top', 'middle', 'bottom']),\n  };\n\n  static defaultProps = {\n    size: '100%',\n    gutter: 0,\n    align: 'left',\n    valign: 'top'\n  };\n\n  static childContextTypes = {\n    grid: PropTypes.object\n  };\n\n  constructor() {\n    super();\n    this.id = uniqueId('rgig-grid');\n  }\n\n  getChildContext() {\n    return {\n      grid: this.props\n    };\n  }\n\n  getGridPropValue(name) {\n    const { breakpoint } = this.props;\n    return getPropValue(name, breakpoint, this.props);\n  }\n\n  getSpanWidth(spanProps, gridSize) {\n    const { breakpoint } = this.props;\n    const spanSize = getPropValue('size', breakpoint, spanProps);\n    return calcSize(spanSize, gridSize);\n  }\n\n  getSpanBreak(spanProps) {\n    const { breakpoint } = this.props;\n    return getPropValue('break', breakpoint, spanProps);\n  }\n\n  getStyles() {\n    const gutter = this.getGridPropValue('gutter');\n    const valign = this.getGridPropValue('valign');\n    return {\n      marginLeft: -gutter / 2,\n      marginRight: -gutter / 2,\n      // Flex styles\n      ...applyPrefixes('FlexWrap', 'wrap'),\n      // Vertical align\n      ...applyPrefixes('AlignItems', ({\n        top: 'flex-start',\n        middle: 'center',\n        bottom: 'flex-end'\n      })[valign]),\n      // MS valign fix\n      MsFlexAlign: ({\n        top: 'start',\n        middle: 'center',\n        bottom: 'end'\n      }[valign])\n    };\n  }\n\n  renderStyleTag() {\n    const content = [\n      `#${this.id}{`,\n      'display: -webkit-flex;',\n      'display: -moz-flex;',\n      'display: -ms-flex;',\n      '}'\n    ];\n    return React.createElement('style', {\n      dangerouslySetInnerHTML: { __html: content.join(' ') }\n    });\n  }\n\n  renderChildren() {\n    const gridSize = this.getGridPropValue('size');\n    const nextChildren = [];\n    let widthCounter = 0;\n    Children.forEach(this.props.children, (child, index) => {\n      const spanBreak = this.getSpanBreak(child.props);\n      let spanWidth = this.getSpanWidth(child.props, gridSize);\n      spanWidth = parseInt(spanWidth, 10);\n      widthCounter += spanWidth;\n      if (widthCounter > 100 || spanBreak) {\n        widthCounter = spanWidth;\n        nextChildren.push(React.createElement(Break, { key: `break${index}` }));\n      }\n      nextChildren.push(child);\n    });\n    return nextChildren;\n  }\n\n  render() {\n    return (\n      <div\n        id={this.id}\n        className={this.props.className}\n        style={this.getStyles()}\n      >\n        { this.renderStyleTag() }\n        { this.renderChildren() }\n      </div>\n    );\n  }\n\n}\n"]}